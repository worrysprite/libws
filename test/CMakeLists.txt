CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(test)

if (MSVC)
INCLUDE_DIRECTORIES("${CMAKE_SOURCE_DIR}/3rd/mysql/include")
INCLUDE_DIRECTORIES("${CMAKE_SOURCE_DIR}/3rd/openssl/include")
LINK_DIRECTORIES("${CMAKE_SOURCE_DIR}/3rd/mysql/lib")
LINK_DIRECTORIES("${CMAKE_SOURCE_DIR}/3rd/openssl/lib")
add_compile_options("/std:c++17" "/utf-8" "/MP" "$<$<CONFIG:RELEASE>:/O2>")
else (CMAKE_COMPILER_IS_GNUCXX)
INCLUDE_DIRECTORIES("/usr/include/mysql")
LINK_DIRECTORIES("/usr/lib64/mysql/")
add_compile_options("-std=c++17" "-Wall" "$<$<CONFIG:DEBUG>:-g>" "$<$<CONFIG:RELEASE>:-O2>")
endif (MSVC)

AUX_SOURCE_DIRECTORY(${PROJECT_SOURCE_DIR}/src test_src)

ADD_EXECUTABLE(${PROJECT_NAME} ${test_src})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} wsCore)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} wsDatabase)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} wsNetwork)

if (MSVC)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} libmysql)
else (CMAKE_COMPILER_IS_GNUCXX)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} mysqlclient)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} pthread)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} dl)
endif (MSVC)
